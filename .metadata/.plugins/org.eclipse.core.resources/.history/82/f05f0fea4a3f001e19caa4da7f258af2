package test;

import java.util.HashMap;
import java.util.Map;
import java.util.Random;

import org.springframework.beans.factory.annotation.Autowired;

public class ThreadRanNum extends Thread{
	@Autowired
	private ShareData shareData;
	
	public ThreadRanNum(ShareData shareData) {
		this.shareData = shareData;
	}
	
	@Override
	public void run() {
		Random random = new Random();
		for(int i =0;i<11;i++) {
			int randNum = random.nextInt(100);
			shareData.lstNum.add(randNum);
		}
	}
	
	abstract class shape{
		abstract void run();
		abstract void sing();
		void hi() {
			System.err.println("d");
		}
	}
	
	
	
	public static void main(String []agr) {
		int []nums = {7,1,5,3,6,4};
		int a = removeDup(nums);
		System.err.println(a);
	}
	public static int removeDup(int []prices) {
		int min = prices[0];
		int max = prices[prices.length-1];
		int j = prices.length - 1;
	for(int i = 0; i < prices.length; i++) {
		
		
		if(prices[i]<min && i < j) {
			min = prices[i];
		}
		if(prices[j]> max && j > i) {
			max = prices[j];
		}
		j -- ;
	}
	System.err.println("min: "+ min + " max: "+max);
		return 0;
	}
}
